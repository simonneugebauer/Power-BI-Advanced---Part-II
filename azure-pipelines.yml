# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

parameters:
- name: organization
  type: string
  default: 'qunisgmbh'
- name: project
  type: string
  default: 'QUNIS - Academy'
- name: repository
  type: string
  default: 'QUNIS - Academy'
- name: sourceBranch
  type: string
  default: 'main'
- name: targetBranch
  type: string
  default: 'QUNIS_Development'

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $organization = "$(organization)"
      $project = "$(project)"
      $repository = "$(repository)"
      $sourceBranch = "$(sourceBranch)"
      $targetBranch = "$(targetBranch)"
      
      # Install required modules
      Install-Module -Name ImportExcel -Force -Scope CurrentUser
      
      # Authenticate with Azure DevOps
      $token = "$(System.AccessToken)"
      $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($token)"))
      
      # Get the list of changed files
      $orgUrl = "https://dev.azure.com/$organization"
      $url = "$orgUrl/$project/_apis/git/repositories/$repository/diffs/commits?baseVersion=$sourceBranch&targetVersion=$targetBranch&api-version=6.0"
      $response = Invoke-RestMethod -Uri $url -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)} -Method GET
      
      $changedFiles = $response.changes | Where-Object { $_.changeType -ne "Delete" } | Select-Object -ExpandProperty item
      
      # Create an Excel workbook
      $excelPackage = New-Object OfficeOpenXml.ExcelPackage
      $worksheet = $excelPackage.Workbook.Worksheets.Add("Changes")
      
      $row = 1
      foreach ($file in $changedFiles) {
          # Get file content for both branches
          $sourceUrl = "$orgUrl/$project/_apis/git/repositories/$repository/items?path=$($file.path)&versionDescriptor.version=$sourceBranch&api-version=6.0"
          $targetUrl = "$orgUrl/$project/_apis/git/repositories/$repository/items?path=$($file.path)&versionDescriptor.version=$targetBranch&api-version=6.0"
          
          $sourceContent = Invoke-RestMethod -Uri $sourceUrl -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)} -Method GET
          $targetContent = Invoke-RestMethod -Uri $targetUrl -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)} -Method GET
          
          # Compare content and add to Excel
          # (Rest of the Excel creation code remains the same)
      }
      
      # Save the Excel file
      $excelPath = "$(Build.ArtifactStagingDirectory)\BranchCompare.xlsx"
      $excelPackage.SaveAs($excelPath)
      
      Write-Host "Excel file saved to: $excelPath"

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'BranchCompare'